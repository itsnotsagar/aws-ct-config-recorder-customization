# Local .terraform directories
**/.terraform/*
*.lock.hcl

# .tfstate files
# State files are tracked in this repo for local deployment workflow
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
tfplan
*.tfplan

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore Mac .DS_Store files
.DS_Store

# Ignore Windows Thumbs.db files
Thumbs.db

# Ignore editor and IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Ignore log files
*.log

# Ignore temporary files
*.tmp
*.temp

# Ignore backup files
*.backup
*.bak

# Ignore zip files (often used for Lambda deployments)
*.zip

# Ignore Lambda deployment artifacts but keep directory structure
lambda/artifacts/*.zip
lambda/producer/.terraform_source_hash
lambda/consumer/.terraform_source_hash

# Keep scripts directory but ignore any generated files
scripts/*.pyc
scripts/__pycache__/

# Ignore Python cache files if you have Python Lambda functions
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/
env.bak/
venv.bak/

# Ignore Go binaries if you have Go Lambda functions
*.exe
*.exe~
*.dll
*.so
*.dylib
*.test
*.out

# Ignore AWS credentials and config
.aws/
aws-credentials